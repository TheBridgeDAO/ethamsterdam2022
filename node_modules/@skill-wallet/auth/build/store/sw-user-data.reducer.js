var _a;
import { createSlice } from '@reduxjs/toolkit';
export var initialState = {
    username: '',
    profileImageUrl: undefined,
    role: undefined,
    commitment: 0,
    isLoggedIn: false,
};
export var swUserDataSlice = createSlice({
    name: 'swUserData',
    initialState: initialState,
    reducers: {
        setLoggedIn: function (state, action) {
            state.isLoggedIn = action.payload;
        },
        setCommitment: function (state, action) {
            console.log(action.payload);
            state.commitment = action.payload;
        },
        setRole: function (state, action) {
            state.role = action.payload;
        },
        setUserData: function (state, action) {
            Object.keys(action.payload).forEach(function (key) {
                state[key] = action.payload[key];
            });
        },
    },
});
export var setUserData = (_a = swUserDataSlice.actions, _a.setUserData), setLoggedIn = _a.setLoggedIn, setRole = _a.setRole, setCommitment = _a.setCommitment;
// export const currentUserState = createSelector(
//   (state) => {
//     return {
//       username: state.swUserData.username,
//       profileImageUrl: state.swUserData.profileImageUrl,
//       isLoggedIn: state.swUserData.isLoggedIn,
//     };
//   },
//   (userState) => userState
// );
export var currentUserState = function (state) { return state.swUserData; };
export default swUserDataSlice.reducer;
